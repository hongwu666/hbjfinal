package saas.winbons.beetl.func;

import java.util.List;

import org.beetl.core.Context;
import org.beetl.core.Function;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import saas.winbons.dubbo.api.ContextDTO;
import saas.winbons.framework.tools.ToolModel;

import com.jfinal.plugin.activerecord.Db;
import com.jfinal.plugin.activerecord.Record;

public class SqlFn implements Function {
	
	protected final Logger LOG = LoggerFactory.getLogger(SqlFn.class);

	@Override
	public Object call(Object[] paras, Context ctx) {
		Object o = paras[0];
		if(o != null){
			ContextDTO contextDTO = (ContextDTO)o;
			Object x = paras[1];
			Object sql = paras[2];
			List<Record> find;
			LOG.info("sql:" + sql);
			if(paras.length > 3){
				Object[] params = new Object[paras.length - 3];
				int i = 0;
				for(int j = 3;j <  paras.length;j++){
					params[i++] = paras[j];
				}
				find = Db.find(contextDTO, sql.toString(),params);
			}else{
				find = Db.find(contextDTO, sql.toString()); 
			}
			if(x.equals("one")){
				if(find.size() > 0){
					return find.get(0).getColumns();
				}
			}else{
				return ToolModel.recordListConvert(find);
			}
		}
		return null;
	}

}
