package saas.monitor.tools.security;

import java.util.List;
import java.util.Map;

import org.apache.shiro.SecurityUtils;
import org.apache.shiro.subject.Subject;

import saas.monitor.mvc.security.User;

public class ShiroUtils {
	/**
	 * 返回当前登录的认证实体ID
	 * @return
	 */
	public static String getUserId() {
		ShiroPrincipal principal = getPrincipal();
		if(principal != null) return principal.getId();
		return null;
	}
	
	public static User getUser() {
		ShiroPrincipal principal = getPrincipal();
		if(principal != null) return principal.getUser();
		return null;
	}
	
	/**
	 * 获取当前登录的认证实体
	 * @return
	 */
	public static ShiroPrincipal getPrincipal() {
		Subject subject = SecurityUtils.getSubject();
		return (ShiroPrincipal)subject.getPrincipal();
	}
	
	/**
	 * 获取当前认证实体的中文名称
	 * @return
	 */
	public static String getFullname() {
		ShiroPrincipal principal = getPrincipal();
		if(principal != null) return principal.toString();
		return "";
	}
	
	/**
	 * 获取当前认证实体的登录名称
	 * @return
	 */
	public static String getUsername() {
		ShiroPrincipal principal = getPrincipal();
		if(principal != null) return principal.getUsername();
		throw new RuntimeException("user's name is null.");
	}
	
	public static List<Map<String,Object>> getResources(){
		ShiroPrincipal principal = getPrincipal();
		if(null == principal){
			return null;
		}
		return principal.getResources();
		
	}
	
	public static boolean hasAuthority(String privilegePattern){
		List<Map<String, Object>> resources = getResources();
		if(null == resources)return false;
		for(Map<String, Object> m : resources){
			if(m.get("privilege_pattern").toString().equals(privilegePattern)){
				return true;
			}
		}
		return false;
	}
}
