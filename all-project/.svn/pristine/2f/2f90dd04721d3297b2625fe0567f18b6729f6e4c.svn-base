/** 
 * Copyright (C) 2013 Winbons Technology Software Co.,Ltd
 * All Rights Reserved.
 * Development of this softwareWinbons Technology Software Co.,Ltd.
 * Without the formal written consent of the Company, 
 * any other individuals, groups may not use, 
 * copy, modify, or distribute this software
 * @Title: IdElement.java 
 * @Package saas.framework.data.generator 
 * @Description: 单个租户id 对象池
 * @author yxx
 * @date 2014-3-19 上午9:54:58 
 * @version 1.0 
 */
package com.jfinal.plugin.activerecord;

import java.io.Serializable;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.LinkedBlockingQueue;
import java.util.concurrent.TimeUnit;
import java.util.concurrent.atomic.AtomicBoolean;

public class IdElement implements Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 4234659080995189405L;

	private BlockingQueue<Long> ids = new LinkedBlockingQueue<Long>();
	
	private final Long dbId;
	
	private AtomicBoolean acqiure=new AtomicBoolean(false);
	
	public IdElement(Long dbId) {
		this.dbId = dbId;
	}
	
	/**
	 * 获取锁
	 * @return
	 */
	public boolean acquire(){
		return acqiure.compareAndSet(false, true);
	}
	
	/**
	 * 初始化池
	 * @param dbInitId
	 * @param maxData
	 */
	public void loadIds(Long dbInitId, int maxData) {
		try {
			for (int i = 0; i < maxData; i++) {
				ids.put(dbInitId + i);
			}
			acqiure.compareAndSet(true, false);
		} catch (InterruptedException e) {
		}
	}
	
	public boolean releaseLock(){
		return acqiure.compareAndSet(true, false);
	}

	public Long getDbId() {
		return dbId;
	}
	
	/**
	 * 获取业务id
	 * @return
	 * @throws InterruptedException 
	 */
	public Long getNextId() throws InterruptedException{
		if(acqiure.get()){
			return ids.poll(1,TimeUnit.SECONDS);
		}else{
			return ids.poll();
		}
	}
}
