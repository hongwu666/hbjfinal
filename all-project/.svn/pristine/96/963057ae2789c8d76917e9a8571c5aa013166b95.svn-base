package saas.winbons.framework.tools;

import java.util.Map;
import java.util.Set;

import com.jfinal.kit.StrKit;
import com.jfinal.plugin.activerecord.Model;
import com.jfinal.plugin.activerecord.Table;
import com.jfinal.plugin.activerecord.TableMapping;

public abstract class ToolJfinalSql {
	
	public static String buildSelectSql(Class<? extends Model<?>> clazz,String asTableName,Map<String,String> columnAs,String[] exceptNames){
		Table table = TableMapping.me().getTable(clazz);
		Map<String, Class<?>> columnTypeMap = table.getColumnTypeMap();
		Set<String> keySet = columnTypeMap.keySet();
		if(!StrKit.isBlank(asTableName)){
			if(!asTableName.endsWith(".")){
				asTableName = asTableName + ".";
			}
		}
		String sql = "";
		for (String key : keySet) {
			if(null != exceptNames){
				boolean needBreak = false;
				for(String exceptName : exceptNames){
					if(key.equals(exceptName)){
						needBreak = true;
						break;
					}
				}
				if(needBreak)continue;
			}
			String as = " ";
			if(null != columnAs){
				if(columnAs.containsKey(key)){
					as += "as " + columnAs.get(key);
				}
			}
			sql += asTableName + key + as +  ",";
		}
		return sql.substring(0, sql.length() - 1);
	}
	
	
	public static String getTableName(Class<? extends Model<?>> clazz){
		Table table = TableMapping.me().getTable(clazz);
		return table.getName();
	}
	
	
	public static String buildSelectSql(Class<? extends Model<?>> clazz,String asTableName,String columnAs){
		Table table = TableMapping.me().getTable(clazz);
		Map<String, Class<?>> columnTypeMap = table.getColumnTypeMap();
		Set<String> keySet = columnTypeMap.keySet();
		if(!StrKit.isBlank(asTableName)){
			if(!asTableName.endsWith(".")){
				asTableName = asTableName + ".";
			}
		}
		String sql = "";
		for (String key : keySet) {
			String as = " ";
			if(!StrKit.isBlank(columnAs)){
				as += "as " + columnAs + "_" + key;
			}
			sql += asTableName + key + as +  ",";
		}
		return sql.substring(0, sql.length() - 1);
	}
	
	
	public static String buildSelectSqlWithTable(Class<? extends Model<?>> clazz,String asTableName){
		Table table = TableMapping.me().getTable(clazz);
		Map<String, Class<?>> columnTypeMap = table.getColumnTypeMap();
		Set<String> keySet = columnTypeMap.keySet();
		String tableName = table.getName();
		if(!StrKit.isBlank(asTableName)){
			if(!asTableName.endsWith(".")){
				tableName += " " + asTableName;
				asTableName = asTableName + ".";
			}else{
				tableName += " " + asTableName.substring(0, asTableName.length() - 1);
			}
		}
		String sql = "select ";
		for (String key : keySet) {
			sql += asTableName + key + ",";
		}
		return sql.substring(0, sql.length() - 1) + " from " + tableName;
	}
}
