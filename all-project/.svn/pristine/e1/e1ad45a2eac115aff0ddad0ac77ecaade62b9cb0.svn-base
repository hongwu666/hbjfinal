/** 
 * Copyright (C) 2014 Winbons Technology Software Co.,Ltd
 * All Rights Reserved.
 * Development of this softwareWinbons Technology Software Co.,Ltd.
 * Without the formal written consent of the Company, 
 * any other individuals, groups may not use, 
 * copy, modify, or distribute this software
 * @Title: ITopicManager.java 
 * @Package saas.crm.dynamic.manager 
 * @Description: TODO(用一句话描述该文件做什么) 
 * @author star.ye 
 * @date 2014年10月27日 下午1:34:44 
 * @version 1.0 
 */

package saas.crm.dynamic.manager;

import java.util.List;

import saas.crm.data.model.dynamic.DynamicTopic;
import saas.crm.dynamic.model.DynamicTopicEn;
import saas.winbons.dubbo.api.ContextDTO;

/**
 * @ClassName: ITopicManager
 * @Description: TODO(这里用一句话描述这个类的作用)
 * @author star.ye
 * @date 2014年10月27日 下午1:34:44
 */

public interface ITopicManager {

	/**
	 * 
	 * @Title: addTopic
	 * @Description: 新增话题,包括更新
	 * @param @param en 设定文件
	 * @return void 返回类型
	 * @throws
	 * @date 2014年10月27日 下午1:35:44
	 */
	public DynamicTopic addTopic(ContextDTO contextDTO,DynamicTopicEn en);

	/**
	 * 
	 * @Title: updateTopic
	 * @Description:更新话题
	 * @param @param name 设定文件
	 * @return void 返回类型
	 * @throws
	 * @date 2014年10月27日 下午1:50:56
	 */
	public void updateTopic(String name);
	
	/**
	 * 
	 * @Title: findAllTopics
	 * @Description:按类型查找话题
	 * @param type 类型条件：0-按时间排序查找 1-按评论数排序查找	
	 * 		   lastUpdate 时间条件
	 * @return
	 */
	public List<DynamicTopic> findAllTopics(Integer type, Long lastUpdate, Integer pageNo);

	public List<DynamicTopic> findMyTopics(Long userId,Long lastUpdate);
	
	/**
	 * 关注话题
	 * @param topicId
	 */
	public void attentionTopic(Long topicId);
	
	/**
	 * 取消关注
	 * @param topicId
	 */
	public void unattentionTopic(Long topicId);

	/**
	 * 
	 * @Title: findMyAttenTopic
	 * @Description: 查询我关注的话题
	 * @param 设定文件
	 * @return void 返回类型
	 * @throws
	 * @date 2014年10月27日 下午3:04:44
	 */
	public List<DynamicTopic> findMyAttenTopic(Long lastUpdate);
	
	public void removeDyUpdate(Long topicId);
	
	/**
	 * 根据关键字查找匹配的话题
	 * @param keyword
	 * @return
	 */
	public List<String> findTopicByKeyword(String keyword);
	
}
